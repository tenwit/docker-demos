task updateParabank(type: Exec) {
    commandLine 'git', 'submodule', 'update', '--init', 'parabank'
}

task buildParabank(type: Exec) {
    dependsOn 'updateParabank'
    workingDir 'parabank'
    commandLine 'mvn', 'install'
}

task build(type: Exec) {
    dependsOn 'buildParabank'
    commandLine 'docker', 'build', '-t', 'iqa/parabank:latest', '-t', 'registry.gitlab.com/integrationqa/iqa/demos/docker/parabank:latest', '.'
}

task assemble { // Alias for "build", to follow the gradle convention.
    dependsOn 'build'
}

task run(type: Exec) {
    ignoreExitValue true
    dependsOn 'build', 'cleanContainer'
    commandLine 'docker', 'run', '-itd', '--name', 'base_parabank', 'iqa/parabank:latest'
}

task stop(type: Exec) {
    ignoreExitValue true
    commandLine 'docker', 'stop', 'base_parabank'
}

task deploy(type: Exec) {
    commandLine 'docker', 'push', 'registry.gitlab.com/integrationqa/iqa/demos/docker/parabank:latest'
}

task cleanContainer(type: Exec) {
    ignoreExitValue true
    commandLine 'docker', 'rm', '-f', 'base_parabank'
}

task cleanImage(type: Exec) {
    ignoreExitValue true
    dependsOn 'cleanContainer'
    commandLine 'docker', 'image', 'rm', '-f', 'iqa/parabank:latest', 'registry.gitlab.com/integrationqa/iqa/demos/docker/parabank:latest'
}

task clean(type: Exec) {
     workingDir 'parabank'
     commandLine 'mvn', 'clean' 
}

task check {
     dependsOn 'run', 'stop'
}